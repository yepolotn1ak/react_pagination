{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","itemsCount","start","end","itemsPerPage","currentPage","onPageChange","pagesCount","Math","ceil","pages","handlePageChange","page","className","cn","disabled","href","onClick","map","active","item","App","useState","setCurrentPage","setItemsPerPage","items","min","length","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAoB,GAEjBC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAAa,SAAC,GAOb,IANZC,EAMW,EANXA,WACAC,EAKW,EALXA,MACAC,EAIW,EAJXA,IACAC,EAGW,EAHXA,aACAC,EAEW,EAFXA,YACAC,EACW,EADXA,aAEMC,EAAaC,KAAKC,KAAKR,EAAaG,GACpCM,EAAQhB,EAAW,EAAGa,GAMtBI,EAAmB,SAACC,GACpBA,IAASP,GAAeO,GAAQ,GAAKA,GAAQL,GAC/CD,EAAaM,IAIjB,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBV,IAHhB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,GAAqB,OACpCY,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,oBAWDK,EAAMQ,KAAI,SAAAN,GAAI,OACb,oBAEEC,UAAWC,IACT,YACA,CAAEK,OAAQd,IAAgBO,IAJ9B,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAiBC,IAJlC,SAMGA,KAZEA,MAiBT,oBACEC,UAAWC,IACT,YACA,CAAEC,SAAUV,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,GAAc,OAC7CU,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,uBAYJ,6BAlEKX,EAAWQ,EAAOC,GAAKe,KAAI,SAAApB,GAAC,qBAAYA,MAmExBoB,KAAI,SAAAE,GAAI,OACzB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvFNC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOlB,EAAP,KAAqBoB,EAArB,KACMC,EAAQ/B,EAAW,EAAG,IACtBQ,GAASG,EAAc,GAAKD,EAAe,EAC3CD,EAAMK,KAAKkB,IAAIrB,EAAcD,EAAcqB,EAAME,QAWvD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCH,EADjC,cAC4CC,EAD5C,eACsDsB,EAAME,OAD5D,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAOzB,EACP0B,SApBkB,SAACC,GAC3BP,GAAiBO,EAAMC,OAAOH,OAC9BN,EAAe,IAaT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,WAAYwB,EAAME,OAClBzB,MAAOA,EACPC,IAAKA,EACLC,aAAcA,EACdC,YAAaA,EACbC,aA5CmB,SAACM,GACxBW,EAAeX,UCVnBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.490f1d91.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  itemsCount: number,\n  start: number,\n  end: number,\n  itemsPerPage: number,\n  currentPage: number,\n  onPageChange: (arg: number) => void,\n}\n\nexport const Pagination = ({\n  itemsCount,\n  start,\n  end,\n  itemsPerPage,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  const pagesCount = Math.ceil(itemsCount / itemsPerPage);\n  const pages = getNumbers(1, pagesCount);\n\n  const getItemsForPage = () => {\n    return getNumbers(start, end).map(n => `Item ${n}`);\n  };\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage && page >= 1 && page <= pagesCount) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 && 'true'}\n            onClick={() => handlePageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li\n            key={page}\n            className={cn(\n              'page-item',\n              { active: currentPage === page },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handlePageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === pagesCount },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesCount && 'true'}\n            onClick={() => handlePageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {getItemsForPage().map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const items = getNumbers(1, 42);\n  const start = (currentPage - 1) * itemsPerPage + 1;\n  const end = Math.min(currentPage * itemsPerPage, items.length);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (event: { target: { value: string }; }) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        itemsCount={items.length}\n        start={start}\n        end={end}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}